{"version":3,"sources":["Layer.js","Saved.js","index.js","LoginPage.js"],"names":["Layer","props","state","hideClicked","hideLayer","bind","copyCoords","copyLength","genScrib","id","this","number","className","onClick","saveLayer","deleteLayer","defaultValue","name","type","onChange","e","updateLayer","placeholder","readOnly","cols","rows","path","document","querySelector","size","style","strokeDasharray","strokeDashoffset","animation","scribbleSize","startX","startY","density","width","height","d","i","j","r","Math","floor","random","rangeX","rangeY","randomY","setAttribute","console","log","createScribble","getAttribute","value","opacity","backgroundColor","color","setState","select","execCommand","React","Component","Saved","animate","deanimate","length","stroke","strokeLinecap","strokeWidth","fill","isScribble","animTime","transition","setTimeout","Main","tab","layers","currentPath","numLayers","saved","numSaved","savedNames","addLayer","canvasClicked","toLayers","toSaved","map","layer","Path","LayerList","reloadLength","num","newName","numReps","names","substring","toFixed","newSaved","concat","savedTab","layersTab","oldLayer","newLayer","pop","half1","slice","half2","newHalf2","push","alert","stat","stats","name1","number1","path1","length1","strokeWidth1","color1","isScribble1","animTime1","eval","getTotalLength","thing","ReactDOM","render"],"mappings":"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","file":"static/js/main.0de10c16.chunk.js","sourcesContent":["import React from 'react'\nimport './index.css';\n\nclass Layer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hideClicked: false,\n        }\n        this.hideLayer = this.hideLayer.bind(this)\n        this.copyCoords = this.copyCoords.bind(this)\n        this.copyLength = this.copyLength.bind(this)\n        this.genScrib = this.genScrib.bind(this)\n    }\n\n    render() {\n        return (\n            <div id={\"layer\" + this.props.number} className=\"layer\">\n                <div className=\"btn-box btn-box-top\">\n                    <button className=\"reset\" id={\"resetBtn\" + this.props.number} >Reset</button>\n                    <button className=\"hide\" id={\"hideBtn\" + this.props.number} onClick={this.hideLayer}>Hide</button>\n                    <button className=\"save\" id={\"saveLayerBtn\" + this.props.number} onClick={() => { this.props.saveLayer(this.props.number) }}>Save</button>\n                    <button className=\"remove\" id={\"removeBtn\" + this.props.number} onClick={() => { this.props.deleteLayer(this.props.number) }}>Remove</button>\n                </div>\n                <div className=\"btn-box\">\n                    <input className=\"h2-input\" defaultValue={this.props.name} type=\"text\" onChange={(e) => {this.props.updateLayer(e, this.props.number, 'name')}} />\n                    <div className=\"btn-box2\">\n                        <button className=\"genNew\" id={\"genNewBtn\" + this.props.number} onClick={this.genScrib}>New Scribble</button>\n                    </div>\n                </div>\n    \n                <input type=\"text\" id={\"color-input\" + this.props.number} placeholder=\"Color\" onChange={(e) => {this.props.updateLayer(e, this.props.number, 'color')}} />\n                <input type=\"number\" id={\"strokeWidth-input\" + this.props.number} placeholder=\"Stroke width\" onChange={(e) => {this.props.updateLayer(e, this.props.number, 'strokeWidth')}} />\n                <input type=\"number\" id={\"animation-input\" + this.props.number} placeholder=\"Animation Speed\" onChange={(e) => {this.props.updateLayer(e, this.props.number, 'animTime')}} />\n                <input type=\"number\" id={\"size-input\" + this.props.number} placeholder=\"Scribble size\" />\n    \n                <div className=\"length-container\">\n                    <div className=\"length-heading\">\n                        <h3>Stroke Length</h3>\n                        <button className=\"copyLength copy\" onClick={this.copyLength} id={\"copyLengthBtn\" + this.props.number}><i className=\"far fa-copy\"></i></button>\n                        <button className=\"reloadLength copy\" onClick={(e) => {this.props.updateLayer(e, this.props.number, 'length')}} id={\"reloadLengthBtn\" + this.props.number}><i className=\"fas fa-redo-alt\"></i></button>\n                    </div>\n                    <input readOnly type = \"number\" id={\"strokeLength\" + this.props.number} className=\"length-input\" />\n                </div>\n    \n                <div className=\"coords-container\">\n                    <div className=\"coords-heading\">\n                        <h3>SVG Coordinates</h3>\n                        <button className=\"copyCoords copy\" onClick={this.copyCoords} id={\"copyCoordsBtn\" + this.props.number}><i className=\"fas fa-copy\"></i></button>\n                    </div>\n                    <textarea id={\"text-display\" + this.props.number} name=\"paragraph_text\" cols=\"50\" rows=\"10\" onChange={(e) => {this.props.updateLayer(e, this.props.number, 'path')}} ></textarea>\n                </div>\n            </div>\n        )\n    }\n\n    genScrib(e) {\n        let path = document.querySelector(`#path${this.props.number}`)\n        let size = document.querySelector(`#size-input${this.props.number}`)\n        path.style.strokeDasharray = ''\n        path.style.strokeDashoffset = ''\n        path.style.animation = ''\n        let scribbleSize = 100\n        if (size !== '') {\n            scribbleSize = size\n        }\n        createScribble('#path' + this.props.number, 450, 300, 1, scribbleSize, 4, 4)\n        let d = path.getAttribute('d')\n        document.querySelector(`#text-display${this.props.number}`).value = d\n\n        this.props.updateLayer(e, this.props.number, 'length')\n        this.props.updateLayer(e, this.props.number, 'isScribble')\n    }\n\n    hideLayer() {\n        if (!this.state.hideClicked) {\n            document.querySelector('#path' + this.props.number).style.opacity = '0%'\n            document.querySelector(\"#hideBtn\" + this.props.number).style.backgroundColor = 'rgb(92, 92, 92)'\n            document.querySelector(\"#hideBtn\" + this.props.number).style.color = 'white'\n            this.setState({ hideClicked: true })\n        } else {\n            document.querySelector('#path' + this.props.number).style.opacity = '100%'\n            document.querySelector(\"#hideBtn\" + this.props.number).style.backgroundColor = 'white'\n            document.querySelector(\"#hideBtn\" + this.props.number).style.color = 'rgb(92, 92, 92)'\n            this.setState({ hideClicked: false })\n        }\n    }\n\n    //copy path coords\n    copyCoords() {\n        document.querySelector(\"#text-display\" + this.props.number).select()\n        document.execCommand(\"copy\")\n    }\n\n    //copy path length\n    copyLength() {\n        document.querySelector(\"#strokeLength\" + this.props.number).select()\n        document.execCommand(\"copy\")\n    }\n\n}\n\n//scribble creator\nfunction createScribble(id, startX, startY, density, size, width, height) {\n    let d = `M ${startX} ${startY} Q ${startX + 5} ${startY + 5}, ${startX - 5} ${startY} `\n    for (let i = 0; i < density; i++) {\n        d += `T ${startX} ${startY} T ${startX + 5} ${startY + 5} `\n        for (let j = 0; j <= size; j++) {\n            let r = Math.floor(Math.random() * 2)\n            let r2 = Math.floor(Math.random() * 2)\n            let rangeX = j / width\n            let rangeY = j / height\n            let randomX\n            let randomY\n\n            if (r % 2 === 0) {\n                randomX = startX + rangeX\n            } else {\n                randomX = startX - rangeX\n            }\n            if (r2 % 2 === 0) {\n                randomY = startY + rangeY\n            } else {\n                randomY = startY - rangeY\n            }\n\n            d += `T ${randomX} ${randomY} `\n        }\n    }\n    document.querySelector(id).setAttribute('d', d)\n    console.log(d)\n}\n\nexport default Layer","import React from 'react'\nimport './index.css';\n\nclass Saved extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            \n        }\n        this.copyCoords = this.copyCoords.bind(this)\n        this.copyLength = this.copyLength.bind(this)\n        this.animate = this.animate.bind(this)\n        this.deanimate = this.deanimate.bind(this)\n    }\n\n    render() {\n        return (\n            <div id={\"saved\" + this.props.number} className=\"layer saveLayer\">\n                <div className=\"btn-box\">\n                    <h2 className=\"longer-h2\">{this.props.name}</h2>\n                    <div className=\"btn-box2\">\n                        <button className=\"show\" id={\"ani\" + this.props.number} onClick={this.animate}>Show</button>\n                    <button className=\"genNew\" id={\"ani\" + this.props.number} onClick={this.deanimate}>Hide</button>\n                    </div>\n                </div>\n    \n                <div className=\"length-container\">\n                    <div className=\"length-heading\">\n                        <h3>Stroke Length</h3>\n                        <button className=\"copyLength copy\" onClick={this.copyLength} id={\"clBtn\" + this.props.number}><i className=\"far fa-copy\"></i></button>\n                        <h3 className=\"h3-margin-left\">SVG Coordinates</h3>\n                        <button className=\"copyCoords copy\" onClick={this.copyCoords} id={\"ccBtn\" + this.props.number}><i className=\"fas fa-copy\"></i></button>\n                    </div>\n                </div>\n    \n                <div className=\"coords-container\">\n                    <div className=\"coords-heading\">\n                        <input readOnly value={this.props.length} className=\"small-input\" id={\"CL\" + this.props.number} />\n                        <input readOnly value={this.props.path} className=\"small-input\" id={\"CC\" + this.props.number} />\n                    </div>\n                </div>\n\n                <svg className=\"canvas\" id=\"canvas2\" width=\"600\" height=\"600\">\n                    <path id={\"p\" + this.props.number} className=\"draw saved-path\" stroke={this.props.color} strokeLinecap=\"round\" strokeWidth={this.props.strokeWidth} fill=\"transparent\" d={this.props.path} />\n                </svg>\n            </div>\n        )\n    }\n\n    animate() {\n        let path = document.querySelector('#p' + this.props.number)\n        path.style.opacity = '100%'\n        if (!this.props.isScribble) {\n            path.style.strokeDasharray = this.props.length\n            path.style.strokeDashoffset = this.props.length\n            path.style.transition = ''\n            setTimeout(() => {\n                path.style.transition = `stroke-dashoffset ${this.props.animTime}s linear`\n                path.style.strokeDashoffset = 0\n            }, 100);\n            setTimeout(() => {\n                path.style.transition = ''\n            }, this.props.animTime * 1000);\n        } else {\n            path.style.strokeDasharray = this.props.length / 13\n            path.style.strokeDashoffset = this.props.length\n            path.style.animation = `scribble ${this.props.animTime * 6}s linear infinite alternate`\n        }\n    }\n\n    deanimate() {\n        let path = document.querySelector('#p' + this.props.number)\n        if (!this.props.isScribble) {\n            path.style.transition = ''\n            setTimeout(() => {\n                path.style.transition = `stroke-dashoffset ${this.props.animTime}s linear`\n                path.style.strokeDashoffset = this.props.length\n            }, 100);\n            setTimeout(() => {\n                path.style.transition = ''\n            }, this.props.animTime * 1000);\n        } else {\n            path.style.opacity = '0%'\n        }\n    }\n\n    //copy path coords\n    copyCoords() {\n        document.querySelector(\"#CC\" + this.props.number).select()\n        document.execCommand(\"copy\")\n    }\n\n    //copy path length\n    copyLength() {\n        document.querySelector(\"#CL\" + this.props.number).select()\n        document.execCommand(\"copy\")\n    }\n\n}\n\nexport default Saved","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport LoginPage from './LoginPage.js'\nimport Layer from './Layer.js'\nimport Saved from './Saved.js'\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tab: 1,\n            layers: [\n                {\n                  name: 'Layer #1',\n                  number: 1,\n                  path: '',\n                  length: 0,\n                  strokeWidth: 2,\n                  color: 'black',\n                  isScribble: false,\n                  animTime: 6,\n                }\n            ],\n            currentPath: '',\n            numLayers: 1,\n            saved: [\n                {\n                    name: 'among Us!',\n                    path: 'M 180 233 Q 206 145, 294 178 Q 335 194, 368 232 Q 389 253, 429 286 Q 449 303, 418 332 Q 404 345, 350 302 Q 320 332, 299 331 Q 311 330, 323 325 Q 344 346, 359 360 Q 371 374, 348 394 Q 336 406, 283 372 Q 237 334, 211 298 Q 266 271, 280 237 Q 264 217, 222 226 Q 194 235, 195 273 Q 195 292, 211 298 Q 198 291, 194 274 Q 178 256, 181 231 Q 190 183, 234 171 Q 266 168, 296 180 Q 350 147, 391 189 Q 401 204, 398 218 Q 398 235, 387 248 Q 342 209, 320 191 Q 299 181, 291 176 Q 215 177, 245 76 Q 209 141, 206 139 Q 194 145, 179 79 Q 174 152, 177 155 Q 176 172, 130 115 Q 154 181, 167 198 Q 185 177, 206 161 Q 221 150, 242 155 Q 225 176, 167 198',\n                    length: '2260.47705078125',\n                    strokeWidth: '2',\n                    color: 'orange',\n                    number: 99,\n                    isScribble: false,\n                    animTime: 5,\n                },\n                {\n                    name: 'Large-ish Scribble',\n                    path: 'M 450 300 Q 455 305, 445 300 T 450 300 T 455 305 T 450 300 T 449.75 300.25 T 449.5 299.5 T 449.25 299.25 T 451 301 T 451.25 301.25 T 448.5 301.5 T 448.25 301.75 T 448 302 T 447.75 302.25 T 452.5 297.5 T 447.25 302.75 T 453 303 T 453.25 303.25 T 453.5 296.5 T 453.75 303.75 T 446 296 T 454.25 295.75 T 454.5 295.5 T 445.25 295.25 T 455 305 T 455.25 305.25 T 455.5 305.5 T 444.25 305.75 T 456 306 T 443.75 306.25 T 443.5 293.5 T 456.75 293.25 T 457 293 T 457.25 292.75 T 442.5 307.5 T 442.25 307.75 T 442 292 T 441.75 308.25 T 441.5 291.5 T 441.25 308.75 T 459 309 T 459.25 290.75 T 459.5 309.5 T 459.75 309.75 T 440 310 T 439.75 289.75 T 460.5 310.5 T 460.75 310.75 T 439 311 T 461.25 288.75 T 461.5 311.5 T 438.25 311.75 T 462 312 T 437.75 312.25 T 462.5 287.5 T 462.75 287.25 T 463 287 T 463.25 313.25 T 463.5 286.5 T 463.75 313.75 T 436 286 T 464.25 314.25 T 435.5 285.5 T 435.25 285.25 T 465 285 T 434.75 315.25 T 434.5 284.5 T 465.75 284.25 T 434 284 T 466.25 316.25 T 433.5 316.5 T 466.75 316.75 T 467 317 T 432.75 317.25 T 432.5 317.5 T 432.25 317.75 T 468 282 T 431.75 281.75 T 468.5 318.5 T 431.25 281.25 T 469 319 T 469.25 280.75 T 430.5 280.5 T 469.75 280.25 T 430 320 T 429.75 320.25 T 429.5 320.5 T 470.75 320.75 T 429 321 T 471.25 278.75 T 471.5 321.5 T 428.25 278.25 T 472 322 T 427.75 277.75 T 427.5 322.5 T 472.75 277.25 T 427 323 T 473.25 276.75 T 473.5 276.5 T 473.75 323.75 T 426 276 T 425.75 324.25 T 425.5 275.5 T 425.25 275.25 T 425 325 T 475.25 274.75 T 424.5 274.5 T 475.75 325.75 T 424 326 T 476.25 326.25 T 476.5 273.5 T 423.25 273.25 T 477 273 T 422.75 272.75 T 477.5 272.5 T 477.75 272.25 T 422 272 T 478.25 328.25 T 478.5 271.5 T 478.75 328.75 T 421 329 T 479.25 270.75 T 420.5 270.5 T 479.75 270.25 T 480 270 T 419.75 330.25 T 480.5 269.5 T 419.25 330.75 T 481 331 T 418.75 331.25 T 418.5 331.5 T 418.25 331.75 T 482 332 T 482.25 332.25 T 417.5 332.5 T 482.75 332.75 T 417 267 T 416.75 266.75 T 483.5 333.5 T 416.25 266.25 T 416 334 T 415.75 265.75 T 415.5 265.5 T 415.25 334.75 T 415 335 T 485.25 264.75 T 414.5 264.5 T 485.75 264.25 T 414 336 T 413.75 336.25 T 486.5 336.5 T 413.25 336.75 T 413 263 T 487.25 337.25 T 487.5 262.5 ',\n                    length: '30393.787109375',\n                    strokeWidth: '2',\n                    color: 'black',\n                    number: 98,\n                    isScribble: true,\n                    animTime: 3,\n                },\n                {\n                    name: 'Wolf',\n                    path: 'M 506 470 Q 413 343, 475 290  Q 532 253, 482 218    Q 471 208, 498 211  Q 515 212, 524 199  Q 525 190, 546 192  Q 551 192, 566 163    Q 575 168, 576 179  Q 576 199, 574 199  Q 587 195, 588 186  Q 589 182, 594 190  Q 595 194, 591 201      Q 581 213, 566 233  Q 549 254, 564 296  Q 590 350, 551 426  Q 543 448, 568 500    Q 485 264, 306 500              Q 303 438, 331 401  Q 354 361, 349 342  Q 341 320, 313 330    Q 294 341, 269 345  Q 228 347, 208 324      Q 272 431, 344 333  Q 367 308, 388 302  Q 418 295, 433 325  Q 440 351, 398 406  Q 374 446, 362 451 Q 364 477, 382 491 ',\n                    length: '1989.8394775390625',\n                    strokeWidth: '1',\n                    color: 'black',\n                    number: 97,\n                    isScribble: false,\n                    animTime: 3,\n                },\n                {\n                    name: 'lettuce',\n                    path: 'M 351 270 Q 333 153, 390 232  Q 506 113, 429 242  Q 522 220, 439 271  Q 571 303, 413 304      Q 399 542, 239 477  Q 225 468, 217 500  Q 215 517, 186 489      Q 148 454, 167 448  Q 179 445, 188 438  Q 194 432, 172 402  Q 147 367, 161 340  Q 182 300, 252 277    Q 308 264, 351 270  Q 275 340, 254 396    Q 411 305, 410 304  Q 254 416, 225 439  Q 246 336, 344 270',\n                    length: '2107.392578125',\n                    strokeWidth: '6',\n                    color: 'lightgreen',\n                    number: 96,\n                    isScribble: false,\n                    animTime: 6,\n                },\n                {\n                    name: 'S',\n                    path: 'M 374 182 Q 415 183, 415 181  Q 415 140, 385 118      Q 353 100, 318 117    Q 287 136, 284 179  Q 286 231, 340 245  Q 386 253, 379 289  Q 373 311, 335 300  Q 313 293, 314 264  Q 285 261, 281 263  Q 281 328, 336 339  Q 374 339, 393 328  Q 418 304, 410 254    Q 401 211, 347 203  Q 324 197, 323 176      Q 323 163, 334 150  Q 344 141, 360 144  Q 373 147, 375 161  Q 376 182, 374 182 ',\n                    length: '2107.392578125',\n                    strokeWidth: '1',\n                    color: 'black',\n                    number: 95,\n                    isScribble: false,\n                    animTime: 6,\n                }\n            ],\n            numSaved: 0,\n            savedNames: [],\n        }\n        this.saveLayer = this.saveLayer.bind(this)\n        this.addLayer = this.addLayer.bind(this)\n        this.canvasClicked = this.canvasClicked.bind(this)\n        this.toLayers = this.toLayers.bind(this)\n        this.toSaved = this.toSaved.bind(this)\n        this.deleteLayer = this.deleteLayer.bind(this)\n        this.updateLayer = this.updateLayer.bind(this)\n    }\n\n    render() {\n        return (\n            <div>\n                {/* <LoginPage /> */}\n                <svg className=\"canvas\" id=\"canvas1\" onClick={this.canvasClicked} width=\"700\" height=\"500\">\n                    {this.state.layers.map(layer => (\n                        <Path key={\"path\" + layer.number} number={layer.number} color={layer.color} strokeWidth={layer.strokeWidth} d={layer.path} />\n                    ))}\n                </svg>\n                <div id=\"section\">\n                    <div id=\"filler\">\n                        <div id=\"heading\">\n                            <button id=\"addLayerBtn\" onClick={this.addLayer}>Add Layer</button>\n                            <button id=\"selectBtn\">Select Newest</button>\n                            <button className=\"animate\" id=\"animateBtn\">Animate</button>\n                        </div>\n                    </div>\n                    <div className=\"right-column\">\n                        <div id=\"col-header\">\n                            <div id=\"tab-container\">\n                                <button onClick={this.toLayers} className=\"tab clicked\" id=\"layers-tab\">Layers</button>\n                                <button onClick={this.toSaved} className=\"tab\" id=\"saved-tab\">Saved</button>\n                            </div>\n                        </div>\n                        <LayerList tab={this.state.tab} layers={this.state.layers} saved={this.state.saved} deleteLayer={this.deleteLayer} saveLayer={this.saveLayer} updateLayer={this.updateLayer} reloadLength={this.reloadLength} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    saveLayer(num) {\n      let newName = this.state.layers[num - 1].name\n      let numReps = 0\n      let names = this.state.savedNames\n      for (let i = 0; i < names.length; i++) {\n        if (names[i].substring(0, names[i].length - 4) === newName) {\n          numReps++\n        }\n      }\n      if (numReps === 0) {\n        newName = this.state.layers[num - 1].name + '    '\n      } else {\n        newName = this.state.layers[num - 1].name + ' ' + ((1.0 + numReps * 0.1).toFixed(1))\n      }\n      console.log(newName)\n      const newSaved = {\n        name: newName,\n        path: this.state.layers[num - 1].path,\n        length: this.state.layers[num - 1].length,\n        strokeWidth: this.state.layers[num - 1].strokeWidth,\n        color: this.state.layers[num - 1].color,\n        number: this.state.numSaved + 1,\n        isScribble: this.state.layers[num - 1].isScribble,\n        animTime: this.state.layers[num - 1].animTime,\n      }\n      this.setState(state => ({\n        saved: state.saved.concat(newSaved),\n        numSaved: state.numSaved + 1,\n        savedNames: state.savedNames.concat(newName),\n      }))\n    }\n\n    toLayers() {\n      this.setState( {tab: 1} )\n\n      let savedTab = document.querySelector('#saved-tab')\n      let layersTab = document.querySelector('#layers-tab')\n      savedTab.style.color = \"var(--main)\"\n      savedTab.style.backgroundColor = \"white\"\n      layersTab.style.backgroundColor = \"var(--main)\"\n      layersTab.style.color = \"white\"\n    }\n    toSaved() {\n      this.setState( {tab: 2} )\n\n      let savedTab = document.querySelector('#saved-tab')\n      let layersTab = document.querySelector('#layers-tab')\n      layersTab.style.color = \"var(--main)\"\n      layersTab.style.backgroundColor = \"white\"\n      savedTab.style.backgroundColor = \"var(--main)\"\n      savedTab.style.color = \"white\"\n    }\n\n    canvasClicked() {\n        this.setState({ currentPath: document.querySelector(`#path${this.state.numLayers}`).getAttribute('d') })\n    }\n\n    addLayer() {\n      let oldLayer\n      let newLayer\n      let num = this.state.numLayers - 1\n      if (this.state.numLayers > 0) {\n        oldLayer = {\n          name: this.state.layers[num].name,\n          number: this.state.numLayers,\n          path: document.querySelector(`#path${this.state.numLayers}`).getAttribute('d'),\n          length: this.state.layers[num].length,\n          strokeWidth: this.state.layers[num].strokeWidth,\n          color: this.state.layers[num].color,\n          isScribble: this.state.layers[num].isScribble,\n          animTime: this.state.layers[num].animTime,\n        }\n        newLayer = {\n          name: `Layer #${this.state.numLayers + 1}`,\n          number: this.state.numLayers + 1,\n          path: '',\n          length: 0,\n          strokeWidth: 2,\n          color: 'black',\n          isScribble: false,\n          animTime: 6,\n        }\n        \n        this.state.layers.pop()\n        this.setState(state => ({\n            layers: state.layers.concat(oldLayer).concat(newLayer),\n            numLayers: state.numLayers + 1,\n            currentPath: ''\n        }))\n      } else {\n        newLayer = {\n          name: 'Layer #1',\n          number: 1,\n          path: '',\n          length: 0,\n          strokeWidth: 2,\n          color: 'black',\n          isScribble: false,\n          animTime: 6,\n        }\n        this.setState(state => ({\n          layers: state.layers.concat(newLayer),\n          numLayers: 1,\n          currentPath: ''\n        }))\n      }\n      console.log('numlayers:' + this.state.numLayers)\n      console.log(this.state.layers)\n    }\n\n    deleteLayer(num) {\n      let half1 = this.state.layers.slice(0, num - 1)\n      let half2 = this.state.layers.slice(num)\n      let newHalf2 = []\n      for (let i = 0; i < half2.length; i++) {\n        console.log(this.state.numLayers)\n        const newLayer = {\n          name: half2[i].name,\n          number: half2[i].number - 1,\n          path: half2[i].path,\n          length: half2[i].length,\n          strokeWidth: half2[i].strokeWidth,\n          color: half2[i].color,\n          isScribble: half2[i].isScribble,\n          animTime: half2[i].animTime,\n        }\n        newHalf2.push(newLayer)\n      }\n      this.setState(state => ({\n        layers: half1.concat(newHalf2),\n        numLayers: state.numLayers - 1, \n      }))\n      if (num === this.state.numLayers) {\n        this.setState({ \n          currentPath: '',\n        })\n      }\n      alert(this.state.layers[0].name)\n      console.log(this.state.layers)\n    }\n\n    updateLayer(e, num, stat) {\n      console.log(this.state.layers)\n      let half1 = this.state.layers.slice(0, num - 1)\n      let half2 = this.state.layers.slice(num)\n      let layer = this.state.layers[num - 1]\n      console.log(layer)\n      let stats = ['name', 'number', 'path', 'strokeWidth', 'color', 'animTime']\n      let name1, number1, path1, length1, strokeWidth1, color1, isScribble1, animTime1\n      for (let i = 0; i < stats.length; i++) {\n        if (stat === stats[i]) {\n          eval(stats[i] + '1 = e.target.value')\n        } else {\n          eval(stats[i] + '1 = layer.' + stats[i])\n        }\n      }\n\n      if (layer.isScribble) {\n        isScribble1 = false\n      } else {\n        isScribble1 = true\n      }\n      length1 = document.querySelector(`#path${num}`).getTotalLength()\n      document.querySelector(`#strokeLength${num}`).value = length1\n\n      let newLayer = {\n        name: name1,\n        number: number1,\n        path: path1,\n        length: length1,\n        strokeWidth: strokeWidth1,\n        color: color1,\n        isScribble: isScribble1,\n        animTime: animTime1,\n      }\n\n      this.setState({ layers: half1.concat(newLayer).concat(half2) })\n    }\n\n}\n\nfunction Path(props) {\n    return (\n        <path id={\"path\" + props.number} className=\"draw\" stroke={props.color} strokeLinecap=\"round\" strokeWidth={props.strokeWidth} color={props.color} fill=\"transparent\" d={props.d} />\n    )\n}\n\nfunction LayerList(props) {\n    if (props.tab === 1) {\n        return (\n            <div className=\"layers-container\">\n                {props.layers.map(layer => (\n                    <Layer key={\"layer\" + layer.number} number={layer.number} name={layer.name} deleteLayer={props.deleteLayer} saveLayer={props.saveLayer} updateLayer={props.updateLayer} reloadLength={props.reloadLength} />\n                ))}\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"layers-container\">\n                {props.saved.map(thing => (\n                    <Saved key={\"saved\" + thing.number} number={thing.number} name={thing.name} path={thing.path} strokeWidth={thing.strokeWidth} length={thing.length} color={thing.color} isScribble={thing.isScribble} animTime={thing.animTime} />\n                ))}\n            </div>\n        )\n    }\n}\n\n\nReactDOM.render(<Main/>, document.querySelector('#root'))","import './login.css';\n\nfunction LoginPage(props) {\n  return (\n      <div id=\"login-page\">\n          <div id=\"circle\"></div>\n          <svg className=\"canvas\" id=\"canvas3\" width=\"600\" height=\"600\">\n              <path id=\"line\" className=\"draw\" stroke=\"white\" strokeLinecap=\"round\" strokeWidth=\"20\" fill=\"transparent\" d=\"M 768 368 Q 627 237, 554 329          Q 507 393, 454 431    Q 355 492, 340 325  Q 335 213, 295 189  Q 260 173, 219 240        Q 193 288, 149 327    Q 101 362, 61 347      Q 22 323, 6 349 \" />\n          </svg>\n          <div id=\"login-box\">\n              <h1 id=\"login-title\">Sign in to LineScape</h1>\n              <input type=\"email\" placeholder=\"Email\" className=\"login-input\" id=\"email\" />\n              <input type=\"password\" placeholder=\"Password\" className=\"login-input\" id=\"password\" />\n              <button id=\"loginBtn\" className=\"button\">→</button>\n              <p id=\"create-acct\">Create an account</p>\n          </div>\n      </div>\n  )\n}\n\nexport default LoginPage;\n"],"sourceRoot":""}